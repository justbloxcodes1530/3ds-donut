#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <3ds.h>

int main(int argc, char **argv)
{
    aptInit();
    gfxInitDefault();
    consoleInit(GFX_TOP, NULL); // Now on top screen
    hidInit();

    float A = 0, B = 0;
    float i, j;
    int k;

    while (aptMainLoop())
    {
        hidScanInput();
        u32 button = hidKeysDown();
        if (button & KEY_START) break;

        // Smaller dimensions for 3DS top screen
        int width = 40;
        int height = 20;
        int bufferSize = width * height;

        char output[800];     // 40 * 20 = 800
        float zbuffer[800];
        memset(output, ' ', bufferSize);
        memset(zbuffer, 0, sizeof(zbuffer));

        for (j = 0; j < 6.28; j += 0.07) {
            for (i = 0; i < 6.28; i += 0.02) {
                float c = sin(i), d = cos(j), e = sin(A), f = sin(j), g = cos(A);
                float h = d + 2, D = 1 / (c * h * e + f * g + 5);
                float l = cos(i), m = cos(B), n = sin(B);
                float t = c * h * g - f * e;
                int x = (int)(width / 2 + (width / 2 - 1) * D * (l * h * m - t * n));
                int y = (int)(height / 2 + (height / 2 - 1) * D * (l * h * n + t * m));
                int o = x + width * y;
                int N = (int)(8 * ((f * e - c * d * g) * m - c * d * e - f * g - l * d * n));
                if (height > y && y >= 0 && x >= 0 && width > x && D > zbuffer[o]) {
                    zbuffer[o] = D;
                    output[o] = ".,-~:;=!*#$@"[N > 0 ? N : 0];
                }
            }
        }

        // Clear and render
        printf("\x1b[2J"); // Clear screen
        for (k = 0; k < bufferSize; k++) {
            putchar(k % width ? output[k] : '\n');
        }

        A += 0.04;
        B += 0.08;

        gfxFlushBuffers();
        gfxSwapBuffers();
    }

    aptExit();
    gfxExit();
    hidExit();
    return 0;
}
